require 'spec_helper'
require 'pbkdf2'

describe Whatsapp::Api::NodeWriter do

  before do
    key        = PBKDF2.new(hash_function: :sha1, password: 'My secret', salt: 'My challenge', iterations: 16, key_length: 20).bin_string
    key_stream = Whatsapp::Api::KeyStream.new(key)

    @writer     = Whatsapp::Api::NodeWriter.new
    @writer.key = key_stream
  end

  it 'should start stream' do
    stream = @writer.start_stream('my-domain', 'my-resource')

    stream.must_equal "\x57\x41\x01\x02\x10\x00\x21\x5a\xdc\xf1\xcf\xef\x42\xaf\xc3\xda\x80\x89\xc7\x25\x1a\x62\xee\xec\x48\x18\xfa\x0b\x73\xe2\x80\x55\xa7\xee\x51\xa7\xdb\x93\xdd\xbd"
  end

  it 'should flush buffer' do
    stream = @writer.flush_buffer

    stream.must_equal "\x10\x00\x04\x3a\x40\x00\x85"
  end

  it 'should write 8-bit integer' do
    @writer.write_int8(154).must_equal "\x9a"
  end

  it 'should write 16-bit integer' do
    @writer.write_int16(55534).must_equal "\xd8\xee"
  end

  it 'should write 24-bit integer' do
    @writer.write_int24(15777214).must_equal "\xf0\xbd\xbe"
  end

  it 'should write bytes' do
    @writer.write_bytes("Some bytes \x01\x02\x03")

    @writer.output.must_equal "\xfc\x0e\x53\x6f\x6d\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03"
  end

  it 'should write long byte stream' do
    bytes = "More bytes \x01\x02\x03 " * 20
    assert bytes.length > 0x100
    @writer.write_bytes(bytes)

    @writer.output.must_equal "\xfd\x00\x01\x2c\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20\x4d\x6f\x72\x65\x20\x62\x79\x74\x65\x73\x20\x01\x02\x03\x20"
  end

  it 'should write token' do
    @writer.write_token(244)
    @writer.write_token(245)

    @writer.output.must_equal "\xf4\xfe\x00"
  end

  it 'should write jid' do
    @writer.write_jid('my-username', 'my-domain')

    @writer.output.must_equal "\xfa\xfc\x0b\x6d\x79\x2d\x75\x73\x65\x72\x6e\x61\x6d\x65\xfc\x09\x6d\x79\x2d\x64\x6f\x6d\x61\x69\x6e"
  end

  it 'should write jid without username' do
    @writer.write_jid(nil, 'my-domain')

    @writer.output.must_equal "\xfa\x00\xfc\x09\x6d\x79\x2d\x64\x6f\x6d\x61\x69\x6e"
  end

  it 'should write string of known tokens' do
    @writer.write_string('jabber:x:event')
    @writer.write_string('XXX')

    @writer.output.must_equal "\x5c\xfe\x03"
  end

  it 'should write string of unknown tokens' do
    @writer.write_string('some-random-string')

    @writer.output.must_equal "\xfc\x12\x73\x6f\x6d\x65\x2d\x72\x61\x6e\x64\x6f\x6d\x2d\x73\x74\x72\x69\x6e\x67"
  end

  it 'should write string of jid' do
    @writer.write_string('my-username@my-domain')

    @writer.output.must_equal "\xfa\xfc\x0b\x6d\x79\x2d\x75\x73\x65\x72\x6e\x61\x6d\x65\xfc\x09\x6d\x79\x2d\x64\x6f\x6d\x61\x69\x6e"
  end

  it 'should write hash' do
    @writer.write_attributes({'one' => 1, 2 => 'two', 'some-random-string' => 'some-random-value', 'nothing' => nil})

    @writer.output.must_equal "\xfc\x03\x6f\x6e\x65\xeb\xfc\x01\x32\xfc\x03\x74\x77\x6f\xfc\x12\x73\x6f\x6d\x65\x2d\x72\x61\x6e\x64\x6f\x6d\x2d\x73\x74\x72\x69\x6e\x67\xfc\x11\x73\x6f\x6d\x65\x2d\x72\x61\x6e\x64\x6f\x6d\x2d\x76\x61\x6c\x75\x65\xfc\x07\x6e\x6f\x74\x68\x69\x6e\x67\xfc\x00"
  end

  it 'should write list start' do
    @writer.write_list_start(0)
    @writer.write_list_start(255)
    @writer.write_list_start(55534)

    @writer.output.must_equal "\x00\xf8\xff\xf9\xd8\xee"
  end

end
